@startuml
package zedegri {
    abstract class Combatant {
        - name : String
        - hp : int
        - defense : int
        - etherDefense : int
        - speed : int
        - attack : int
        - potential : int

        # Combatant()

        + setName(String)
        + setHp(int)
        + setDefense(int)
        + setEtherDefense(int)
        + setSpeed(int)
        + setAttack(int)
        + setPotential(int)

        + getName() : String
        + getHp() : int
        + getDefense() : int
        + getEtherDefense() : int
        + getSpeed() : int
        + getAttack() : int
        + getPotential() : int
    }

    class Player extends Combatant {
        - ap : int
        - ep : int

        + Player()

        + setAp(int)
        + setEp(int)

        + getAp() : int
        + getEp() : int

        + fromJson(String)
        + toJson() : String
    }

    class Enemy extends Combatant {
        - type : String
        - attacks : List<EnemyAttack>

        + Enemy()

        + setType(String)
        + setAttacks(List<EnemyAttack>)

        + getType() : String
        + getAttacks() : List<EnemyAttack>

        + fromJson(String)
        + toJson() : String
    }

    abstract class Attack {
        - title : String
        - description : String
        - hits : int
        - aoe : boolean
        - accuracy : int
        - mult : double
        - dazePercent : int
        - heal : int
        - leech : boolean
        - burnTime : int
        - poisonTime : int
        - physicalDefenseDebuff : int
        - physicalDefenseTime : int
        - physicalDefenseChance : int
        - physicalAttackDebuff : int
        - physicalAttackTime : int
        - physicalAttackChance : int
        - etherDefenseDebuff : int
        - etherDefenseTime : int
        - etherDefenseChance : int
        - etherAttackDebuff : int
        - etherAttackTime : int
        - etherAttackChance : int

        # Attack()

        + setTitle(String)
        + setDescription(String)
        + setHits(int)
        + setAoe(boolean)
        + setAccuracy(int)
        + setMult(double)
        + setDazePercent(int)
        + setHeal(int)
        + setLeech(boolean)
        + setBurnTime(int)
        + setPoisonTime(int)
        + setPhysicalDefenseDebuff(int)
        + setPhysicalDefenseTime(int)
        + setPhysicalDefenseChance(int)
        + setPhysicalAttackDebuff(int)
        + setPhysicalAttackTime(int)
        + setPhysicalAttackChance(int)
        + setEtherDefenseDebuff(int)
        + setEtherDefenseTime(int)
        + setEtherDefenseChance(int)
        + setEtherAttackDebuff(int)
        + setEtherAttackTime(int)
        + setEtherAttackChance(int)

        + getTitle() : String
        + getDescription() : String
        + getHits() : int
        + getAoe() : boolean
        + getAccuracy() : int
        + getMult() : double
        + getDazePercent() : int
        + getHeal() : int
        + getLeech() : boolean
        + getBurnTime() : int
        + getPoisonTime() : int
        + getPhysicalDefenseDebuff() : int
        + getPhysicalDefenseTime() : int
        + getPhysicalDefenseChance() : int
        + getPhysicalAttackDebuff() : int
        + getPhysicalAttackTime() : int
        + getPhysicalAttackChance() : int
        + getEtherDefenseDebuff() : int
        + getEtherDefenseTime() : int
        + getEtherDefenseChance() : int
        + getEtherAttackDebuff() : int
        + getEtherAttackTime() : int
        + getEtherAttackChance() : int
    }

    class EtherAttack extends Attack {
        - user : String
        - ep : int
        - dazeTarget : String
        - purge : boolean
        - type : EtherAttackType
        - physicalDefenseUp : int
        - physicalAttackUp : int
        - etherDefenseUp : int
        - etherAttackUp : int
        - speedUp : int

        + EtherAttack()

        + setUser(String)
        + setEp(int)
        + setDazeTarget(String)
        + setPurge(boolean)
        + setType(EtherAttackType)
        + setPhysicalDefenseUp(int)
        + setPhysicalAttackUp(int)
        + setEtherDefenseUp(int)
        + setEtherAttackUp(int)
        + setSpeedUp(int)

        + getUser() : String
        + getEp() : int
        + getDazeTarget() : String
        + getPurge() : boolean
        + getType() : EtherAttackType
        + getPhysicalDefenseUp() : int
        + getPhysicalAttackUp() : int
        + getEtherDefenseUp() : int
        + getEtherAttackUp() : int
        + getSpeedUp() : int

        + fromJson(String)
        + toJson() : String
    }

    class EnemyAttack extends Attack {
        - num : int
        - type : EnemyAttackType
        - target : String
        - usePotential : boolean
        - flicker : int
        - points : int

        + EnemyAttack()

        + setNum(int)
        + setType(EnemyAttackType)
        + setTarget(String)
        + setUsePotential(boolean)
        + setFlicker(int)
        + setPoints(int)

        + getNum() : int
        + getType() : EnemyAttackType
        + getTarget() : String
        + getUsePotential() : boolean
        + getFlicker() : int
        + getPoints() : int

        + fromJson(String)
        + toJson() : String
    }

    enum EtherAttackType <<enumeration>> {
        ATTACK
        SELF
        TEAM
    }

    enum EnemyAttackType <<enumeration>> {
        TEAM_HEAL
        HEAL
        LEECH
        HEAVY_PHYSICAL_ATTACK
        HEAVY_ETHER_ATTACK
        PHYSICAL_DEFENSE_UP
        ETHER_DEFENSE_UP
        DAZE
        FLICKER
        PHYSICAL_ATTACK_UP_2
        PHYSICAL_ATTACK_UP_15
        POTENTIAL_UP_2
        POTENTIAL_UP_15
        PHYSICAL_DEFENSE_DOWN
        ETHER_DEFENSE_DOWN
        PHYSICAL_ATTACK_DOWN
        POTENTIAL_DOWN
        BURN
        POISON
        PHYSICAL_ATTACK
        ETHER_ATTACK
    }

    class Editor {
         + main(String[])
     }

     class EditorGui {
         + EditorGui()
     }
}
class zedegri.EditorGui extends javax.swing.JPanel

hide circle
hide enum methods
@enduml